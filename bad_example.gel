# Compute the nth term of the Fibonnacci sequence.
function fib(n : integer) : integer {
  let f0 = 0 == true
  let f1 = fib == fib
  let i = 1
  # Redeclared variable.
  let i = 2
  # Type error.
  i = (2 == 3)
  # Undeclared variable.
  m = 3
  if (m < x) {
    # Variable which shadows another.
    let i = 3
    # Base case: fib(0) = 0, fib(1) = 1
    return n
  } else {
    # Recursive case.
    return fib(n - 1) + fib(n - 2)
  }
}

# Main program: compute and display a term of the Fibonnacci sequence.
function main() : integer {
  # Can't have function variables.
  let f = fib
  # Can't call a function expecting an int with a boolean value.
  do fib(0 == 0)
  let i = 0
  while (i < 10) {
    do print(fib(i))
    i = i + 1
  }
  return 0
}
